{"version":3,"sources":["C:/ngAmpx/angular-src/src/$_lazy_route_resource lazy","C:/ngAmpx/angular-src/src/app/app.component.css","C:/ngAmpx/angular-src/src/app/app.component.html","C:/ngAmpx/angular-src/src/app/app.component.ts","C:/ngAmpx/angular-src/src/app/app.module.ts","C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.css","C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.html","C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.ts","C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.css","C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.html","C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.ts","C:/ngAmpx/angular-src/src/app/components/home/home.component.css","C:/ngAmpx/angular-src/src/app/components/home/home.component.html","C:/ngAmpx/angular-src/src/app/components/home/home.component.ts","C:/ngAmpx/angular-src/src/app/components/login/login.component.css","C:/ngAmpx/angular-src/src/app/components/login/login.component.html","C:/ngAmpx/angular-src/src/app/components/login/login.component.ts","C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.css","C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.html","C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.ts","C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.css","C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.html","C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.ts","C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.css","C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.html","C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.ts","C:/ngAmpx/angular-src/src/app/components/profile/profile.component.css","C:/ngAmpx/angular-src/src/app/components/profile/profile.component.html","C:/ngAmpx/angular-src/src/app/components/profile/profile.component.ts","C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.css","C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.html","C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.ts","C:/ngAmpx/angular-src/src/app/components/project/project.component.css","C:/ngAmpx/angular-src/src/app/components/project/project.component.html","C:/ngAmpx/angular-src/src/app/components/project/project.component.ts","C:/ngAmpx/angular-src/src/app/components/register/register.component.css","C:/ngAmpx/angular-src/src/app/components/register/register.component.html","C:/ngAmpx/angular-src/src/app/components/register/register.component.ts","C:/ngAmpx/angular-src/src/app/guards/auth.guard.ts","C:/ngAmpx/angular-src/src/app/services/auth.service.ts","C:/ngAmpx/angular-src/src/app/services/electrical.service.ts","C:/ngAmpx/angular-src/src/app/services/project.service.ts","C:/ngAmpx/angular-src/src/app/services/validate.service.ts","C:/ngAmpx/angular-src/src/environments/environment.ts","C:/ngAmpx/angular-src/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div>\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProjectComponent } from './components/project/project.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { ProjectService } from './services/project.service';\nimport { ElectricalService } from './services/electrical.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ProjectsModalComponent } from './components/modals/projects-modal/projects-modal.component';\nimport { ProjectDashboardComponent } from './components/project-dashboard/project-dashboard.component';\nimport { ElectricalListComponent } from './components/electrical-list/electrical-list.component';\nimport { ElectricalItemComponent } from './components/electrical-item/electrical-item.component';\nimport { ElectricalsModalComponent } from './components/modals/electricals-modal/electricals-modal.component';\n\n\n//move to separate component\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'project', component: ProjectComponent, canActivate:[AuthGuard]},\n  {path:'project/:id', component: ProjectDashboardComponent},\n  {path:'project/:id/electricals', component: ElectricalListComponent},\n  {path:'project/:id/electricals/:electricalid', component: ElectricalItemComponent},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProjectComponent,\n    ProfileComponent,\n    ProjectsModalComponent,\n    ProjectDashboardComponent,\n    ElectricalListComponent,\n    ElectricalItemComponent,\n    ElectricalsModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard, ProjectService, ElectricalService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"thead th {\\r\\n    font-size: 0.6rem;\\r\\n  }\\r\\n  tbody tr td  {\\r\\n    font-size: 0.6rem;\\r\\n  }\\r\\n  .achievements-wrapper {\\r\\n    height: auto; \\r\\n    overflow: auto;\\r\\n  }\\r\\n  \\r\\n  button.btnPlus {\\r\\n    border-radius: 0 0 0 0!important;\\r\\n    /*color: black;*/\\r\\n  }\\r\\n  \\r\\n  button.btnMinus {\\r\\n    border-radius: 0 .25rem .25rem 0!important;\\r\\n    /*color: black;*/\\r\\n  }\\r\\n  \\r\\n  select.selectForOpenModal {\\r\\n    border-radius: .25rem 0 0 .25rem!important;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.css\n// module id = ../../../../../src/app/components/electrical-item/electrical-item.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" (window:resize)=\\\"onResize($event)\\\" *ngIf=\\\"electricalItem\\\">\\n    <div class=\\\"d-flex justify-content-center pt-3\\\">\\n      <h1>Electrical <strong>{{electricalItem?.equipmentTag}}</strong></h1>\\n    </div>\\n    <form (ngSubmit)=\\\"saveElectrical(electricalItem._id, electricalForm.value)\\\" #electricalForm=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-xl-6 align-self-start\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <span class=\\\"h4\\\">Electrical Equipment Entry</span>\\n          </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemNumber\\\">Item number</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"itemNumber\\\" disabled>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"dateCreate\\\">Date added</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.dateCreate\\\" name=\\\"dateCreate\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"revision\\\">Revision</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.revision\\\" name=\\\"revision\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"quantity\\\">Quantity</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.quantity\\\" name=\\\"quantity\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"equipmentType\\\">Equipment Type</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select\\n                      [disabled]=\\\"electricalItem.equipmentType.length == 0\\\"\\n                      id=\\\"selectedEquipmentType\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedEquipmentType\\\"\\n                      name=\\\"selectedEquipmentType\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentEquipmentType of electricalItem.equipmentType\\\" \\n                        [ngValue]=\\\"currentEquipmentType\\\"\\n                        [selected]=\\\"currentEquipmentType==electricalItem.selectedEquipmentType\\\">\\n                          {{currentEquipmentType}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"equipmentTypeModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"equipmentTypeModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.equipmentType.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>            \\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedPidDrawing\\\">Pid Drawing</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select \\n                      [disabled]=\\\"electricalItem.pidDrawing.length == 0\\\"\\n                      id=\\\"selectedPidDrawing\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedPidDrawing\\\"\\n                      name=\\\"selectedPidDrawing\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentPidDrawing of electricalItem.pidDrawing\\\" \\n                        [ngValue]=\\\"currentPidDrawing\\\"\\n                        [selected]=\\\"currentPidDrawing==electricalItem.selectedPidDrawing\\\">\\n                          {{currentPidDrawing}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"pidDrawingModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"pidDrawingModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.pidDrawing.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"layoutDrawing\\\">Layout Drawing</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select [disabled]=\\\"electricalItem.layoutDrawing.length == 0\\\"\\n                      id=\\\"selectedLayoutDrawing\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedLayoutDrawing\\\"\\n                      name=\\\"selectedLayoutDrawing\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentLayoutDrawing of electricalItem.layoutDrawing\\\" \\n                        [ngValue]=\\\"currentLayoutDrawing\\\"\\n                        [selected]=\\\"currentLayoutDrawing==electricalItem.selectedLayoutDrawing\\\">\\n                          {{currentLayoutDrawing}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"layoutDrawingModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"layoutDrawingModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.layoutDrawing.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"sldDraving\\\">SLD Drawing</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select [disabled]=\\\"electricalItem.sldDraving.length == 0\\\"\\n                      id=\\\"selectedSldDraving\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedSldDraving\\\"\\n                      name=\\\"selectedSldDraving\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentSldDraving of electricalItem.sldDraving\\\" \\n                        [ngValue]=\\\"currentSldDraving\\\"\\n                        [selected]=\\\"currentSldDraving==electricalItem.selectedSldDraving\\\">\\n                          {{currentSldDraving}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"sldDravingModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"sldDravingModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.sldDraving.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"equipmentTag\\\">Equipment Tag</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.equipmentTag\\\" name=\\\"equipmentTag\\\" >\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"equipmentTag2\\\">Equipment Tag 2</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.equipmentTag\\\" name=\\\"equipmentTag2\\\" disabled>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"parentTag\\\">Parent Tag</label>\\n                  <select [disabled]=\\\"parentList?.length == 0\\\"\\n                  id=\\\"selectedParentTag\\\"\\n                  class=\\\"form-control selectForOpenModal\\\"\\n                  [(ngModel)]=\\\"electricalItem.selectedParentTag\\\"\\n                  name=\\\"selectedParentTag\\\"\\n                >\\n                  <option\\n                    *ngFor=\\\"let currentParentTag of parentList\\\" \\n                    [ngValue]=\\\"currentParentTag\\\"\\n                    [selected]=\\\"currentParentTag==electricalItem.selectedParentTag\\\">\\n                      {{currentParentTag}}\\n                  </option>\\n                </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"equipmentNotes\\\">Equipment Notes</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.equipmentNotes\\\" name=\\\"equipmentNotes\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"locationArea\\\">Location/Area</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select [disabled]=\\\"electricalItem.locationArea.length == 0\\\"\\n                      id=\\\"selectedLocationArea\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedLocationArea\\\"\\n                      name=\\\"selectedLocationArea\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentLocationArea of electricalItem.locationArea\\\" \\n                        [ngValue]=\\\"currentLocationArea\\\"\\n                        [selected]=\\\"currentLocationArea==electricalItem.selectedLocationArea\\\">\\n                          {{currentLocationArea}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"locationAreaModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"locationAreaModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.locationArea.length == 0\\\"\\n                    >\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedEquipmentDescription\\\">Equipment Description</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select [disabled]=\\\"electricalItem.equipmentDescription.length == 0\\\"\\n                      id=\\\"selectedEquipmentDescription\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedEquipmentDescription\\\"\\n                      name=\\\"selectedEquipmentDescription\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentEquipmentDescription of electricalItem.equipmentDescription\\\" \\n                        [ngValue]=\\\"currentEquipmentDescription\\\"\\n                        [selected]=\\\"currentEquipmentDescription==electricalItem.selectedEquipmentDescription\\\">\\n                          {{currentEquipmentDescription}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"equipmentDescriptionModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"equipmentDescriptionModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"electricalItem.equipmentDescription.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"cloneTag\\\">Clone Tag</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.cloneTag\\\" name=\\\"cloneTag\\\" disabled>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"newTag\\\">New Tag</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.newTag\\\" name=\\\"newTag\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"length\\\">Length(mm)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.length\\\" name=\\\"length\\\" >\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"depth\\\">Depth(mm)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.depth\\\" name=\\\"depth\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"height\\\">Height(mm)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.height\\\" name=\\\"height\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"weight\\\">Weight(kg)</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.weight\\\" name=\\\"weight\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"coordForX\\\">X Coord(m)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.coordForX\\\" name=\\\"coordForX\\\" >\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"coordForY\\\">Y Coord(m)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.coordForY\\\" name=\\\"coordForY\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"coordForZ\\\">Z Coord(m)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.coordForZ\\\" name=\\\"coordForZ\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"heatDissipation\\\">Heat Dissipation (W)</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.heatDissipation\\\" name=\\\"heatDissipation\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"scenarioFirstLoadFactor\\\">Scenario 1 Load Factor %</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.scenarioFirstLoadFactor\\\" name=\\\"scenarioFirstLoadFactor\\\" >\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-12 col-xl-6 align-self-start\\\">\\n            <div class=\\\"d-flex justify-content-center\\\">\\n              <span class=\\\"h4\\\">General Rating</span>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedPowerSystem\\\">Power System</label>\\n                  <select\\n                    id=\\\"selectedPowerSystem\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedPowerSystem\\\"\\n                    (change)=\\\"typeChanged()\\\"\\n                    name=\\\"selectedPowerSystem\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentPowerSystem of electricalItem.powerSystem\\\" \\n                      [ngValue]=\\\"currentPowerSystem\\\"\\n                      [selected]=\\\"currentPowerSystem==electricalItem.selectedPowerSystem\\\"\\n                    >\\n                      {{currentPowerSystem}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedVoltage\\\">Voltage</label>\\n                  <div class=\\\"d-flex flex-row\\\">\\n                    <select\\n                      id=\\\"selectedVoltage\\\"\\n                      class=\\\"form-control selectForOpenModal\\\"\\n                      [(ngModel)]=\\\"electricalItem.selectedVoltage.name\\\"\\n                      name=\\\"selectedVoltage\\\"\\n                    >\\n                      <option\\n                        *ngFor=\\\"let currentVoltage of productsAfterChangeEvent\\\"\\n                        [ngValue]=\\\"currentVoltage.name\\\"\\n                        [selected]=\\\"currentVoltage.name == electricalItem.selectedVoltage.name\\\"\\n                      >\\n                        {{currentVoltage.name}}\\n                      </option>\\n                    </select>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Add new item\\\"\\n                      (click)=\\\"voltageModal.showAddModal()\\\"\\n                    ></button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                      data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\"\\n                      title=\\\"Drop selected item\\\"\\n                      (click)=\\\"voltageModal.showDropModal(dropElementFlag)\\\"\\n                      [disabled]=\\\"productsAfterChangeEvent.length == 0\\\"\\n                    ></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"totalPF\\\">Total % P.F.</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.totalPF\\\" name=\\\"totalPF\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"totalEFF\\\">Total % EFF.</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.totalEFF\\\" name=\\\"totalEFF\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"nameplateRating\\\">Nameplate Rating</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.nameplateRating\\\" name=\\\"nameplateRating\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"units\\\">Units</label>\\n                  <select\\n                    id=\\\"selectedUnits\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedUnits\\\"\\n                    name=\\\"selectedUnits\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentUnit of electricalItem.units\\\" \\n                      [ngValue]=\\\"currentUnit\\\"\\n                      [selected]=\\\"currentUnit==electricalItem.selectedUnits\\\"\\n                    >\\n                      {{currentUnit}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedMotorSF\\\">Motor S.F.</label>\\n                  <select\\n                    id=\\\"selectedMotorSF\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedMotorSF\\\"\\n                    name=\\\"selectedMotorSF\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentMotorSF of electricalItem.motorSF\\\" \\n                      [ngValue]=\\\"currentMotorSF\\\"\\n                      [selected]=\\\"currentMotorSF==electricalItem.selectedMotorSF\\\"\\n                    >\\n                      {{currentMotorSF}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"motorCode\\\">Motor Code</label>\\n                  <select\\n                    id=\\\"selectedMotorCode\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedMotorCode\\\"\\n                    name=\\\"selectedMotorCode\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentMotorCode of electricalItem.motorCode\\\" \\n                      [ngValue]=\\\"currentMotorCode\\\"\\n                      [selected]=\\\"currentMotorCode==electricalItem.selectedMotorCode\\\"\\n                    >\\n                      {{currentMotorCode}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedSccRating\\\">SCC Rating</label>\\n                  <select\\n                    id=\\\"selectedSccRating\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedSccRating\\\"\\n                    name=\\\"selectedSccRating\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentSccRating of electricalItem.sccRating\\\" \\n                      [ngValue]=\\\"currentSccRating\\\"\\n                      [selected]=\\\"currentSccRating==electricalItem.selectedSccRating\\\"\\n                    >\\n                      {{currentSccRating}}\\n                    </option>\\n                    </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedEnclosureRating\\\">Enclosure Rating</label>\\n                  <select\\n                  id=\\\"selectedEnclosureRating\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"electricalItem.selectedEnclosureRating\\\"\\n                  name=\\\"selectedEnclosureRating\\\"\\n                  >\\n                    <option\\n                      *ngFor=\\\"let currentEnclosureRating of electricalItem.enclosureRating\\\" \\n                      [ngValue]=\\\"currentEnclosureRating\\\"\\n                      [selected]=\\\"currentEnclosureRating==electricalItem.selectedEnclosureRating\\\"\\n                    >\\n                      {{currentEnclosureRating}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"loadFactor\\\">Load Factor (%)</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.loadFactor\\\" name=\\\"loadFactor\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-3 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"selectedLoadDuty\\\">Load Duty</label>\\n                  <select\\n                    id=\\\"selectedLoadDuty\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"electricalItem.selectedLoadDuty\\\"\\n                    name=\\\"selectedLoadDuty\\\"\\n                    >\\n                    <option\\n                      *ngFor=\\\"let currentLoadDuty of electricalItem.loadDuty\\\" \\n                      [ngValue]=\\\"currentLoadDuty\\\"\\n                      [selected]=\\\"currentLoadDuty==electricalItem.selectedLoadDuty\\\"\\n                    >\\n                      {{currentLoadDuty}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-sm-6 align-self-end\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ambientTemp\\\">Ambient Temp (°C)</label>\\n                      <input id=\\\"ambientTemp\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.ambientTemp\\\" name=\\\"ambientTemp\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedTerminationTemp\\\">Termination Temp (°C)</label>\\n                      <select\\n                        id=\\\"selectedTerminationTemp\\\"\\n                        class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"electricalItem.selectedTerminationTemp\\\"\\n                        name=\\\"selectedTerminationTemp\\\"\\n                      >\\n                        <option\\n                          *ngFor=\\\"let currentTerminationTemp of electricalItem.terminationTemp\\\" \\n                          [ngValue]=\\\"currentTerminationTemp\\\"\\n                          [selected]=\\\"currentTerminationTemp==electricalItem.selectedTerminationTemp\\\"\\n                        >\\n                          {{currentTerminationTemp}}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"operationTempMin\\\">Operating T Min.(°C)</label>\\n                      <input id=\\\"operationTempMin\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.operationTempMin\\\" name=\\\"operationTempMin\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"operationTempMax\\\">Operating T Max.(°C)</label>\\n                      <input id=\\\"operationTempMax\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"electricalItem.operationTempMax\\\" name=\\\"operationTempMax\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedInsulDescription\\\">Insul. Designation</label>\\n                      <select\\n                        id=\\\"selectedInsulDescription\\\"\\n                        class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"electricalItem.selectedInsulDescription\\\"\\n                        name=\\\"selectedInsulDescription\\\"\\n                      >\\n                        <option\\n                          *ngFor=\\\"let currentInsulDescription of electricalItem.insulDescription\\\" \\n                          [ngValue]=\\\"currentInsulDescription\\\"\\n                          [selected]=\\\"currentInsulDescription==electricalItem.selectedInsulDescription\\\"\\n                        >\\n                          {{currentInsulDescription}}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-12 col-sm-6 align-self-end\\\" style=\\\"border: 1px solid; border-radius: 8px\\\">\\n                <div class=\\\"row d-flex justify-content-center\\\" style=\\\"padding-bottom: 1.3rem!important;\\\">\\n                  <label><strong>Equipment Hazloc Rating</strong></label>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-3\\\">\\n                    <label><strong>{{electricalItem?.selectedHazlocClass}}</strong></label>\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <label><strong>{{electricalItem?.selectedHazlocZone}}</strong></label>\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <label><strong>{{electricalItem?.selectedHazlocGroup}}</strong></label>\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <label><strong>{{electricalItem?.selectedHazlocTemperature}}</strong></label>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedHazlocClass\\\">Hazloc Class</label>\\n                      <select\\n                        id=\\\"selectedHazlocClass\\\"\\n                        class=\\\"form-control selectForOpenModal\\\"\\n                        [(ngModel)]=\\\"electricalItem.selectedHazlocClass\\\"\\n  \\n                        (ngModelChange)=\\\"optionChanged($event)\\\"\\n                        name=\\\"selectedHazlocClass\\\"\\n                      >\\n                        <option\\n                          *ngFor=\\\"let currentHazlocClass of electricalItem.hazlocClass\\\" \\n                          [ngValue]=\\\"currentHazlocClass\\\"\\n                          [selected]=\\\"currentHazlocClass==electricalItem.selectedHazlocClass\\\"\\n                        >\\n                          {{currentHazlocClass}}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedHazlocZone\\\">Hazloc Zone</label>\\n                      <div class=\\\"d-flex flex-row\\\">\\n                        <select \\n                          [disabled]=\\\"electricalItem.selectedHazlocClass == electricalItem.hazlocClass[0] || !electricalItem.selectedHazlocClass\\\"\\n                          id=\\\"selectedHazlocZone\\\"\\n                          class=\\\"form-control selectForOpenModal\\\"\\n                          [(ngModel)]=\\\"electricalItem.selectedHazlocZone\\\"\\n                          #selectedHazlocZone=\\\"ngModel\\\"\\n                          name=\\\"selectedHazlocZone\\\"\\n                        >\\n                          <option\\n                            *ngFor=\\\"let currentHazlocZone of electricalItem.hazlocZone\\\" \\n                            [ngValue]=\\\"currentHazlocZone\\\"\\n                            [selected]=\\\"currentHazlocZone==electricalItem.selectedHazlocZone\\\"\\n                          >\\n                            {{currentHazlocZone}}\\n                          </option>\\n                        </select>\\n                        <button\\n                          type=\\\"button\\\"\\n                          class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                          data-toggle=\\\"tooltip\\\"\\n                          data-placement=\\\"top\\\"\\n                          title=\\\"Add new item\\\"\\n                          [disabled]=\\\"!electricalItem.selectedHazlocClass || electricalItem.selectedHazlocClass == 'General'\\\"\\n                          (click)=\\\"hazlocZoneModal.showAddModal()\\\"\\n                        ></button>\\n                        <button\\n                          type=\\\"button\\\"\\n                          class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                          data-toggle=\\\"tooltip\\\"\\n                          data-placement=\\\"top\\\"\\n                          title=\\\"Drop selected item\\\"\\n                          (click)=\\\"hazlocZoneModal.showDropModal(dropElementFlag)\\\"\\n                          [disabled]=\\\"electricalItem.hazlocZone.length == 0 || !electricalItem.selectedHazlocClass || electricalItem.selectedHazlocClass == 'General'\\\"\\n                        ></button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedHazlocGroup\\\">Hazloc Group</label>\\n                      <select [disabled]=\\\"electricalItem.selectedHazlocClass == electricalItem.hazlocClass[0] || !electricalItem.selectedHazlocClass\\\"\\n                        id=\\\"selectedHazlocGroup\\\"\\n                        class=\\\"form-control selectForOpenModal\\\"\\n                        [(ngModel)]=\\\"electricalItem.selectedHazlocGroup\\\"\\n                        #selectedHazlocGroup=\\\"ngModel\\\"\\n                        name=\\\"selectedHazlocGroup\\\"\\n                      >\\n                        <option\\n                          *ngFor=\\\"let currentHazlocGroup of electricalItem.hazlocGroup\\\" \\n                          [ngValue]=\\\"currentHazlocGroup\\\"\\n                          [selected]=\\\"currentHazlocGroup==electricalItem.selectedHazlocGroup\\\"\\n                        >\\n                          {{currentHazlocGroup}}\\n                        </option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-12 col-sm-6 align-self-end\\\" *ngIf=\\\"electricalItem\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"selectedHazlocTemperature\\\">Hazloc Temperature</label>\\n                      <div class=\\\"d-flex flex-row\\\">\\n                        <select [disabled]=\\\"electricalItem.selectedHazlocClass == electricalItem.hazlocClass[0] || !electricalItem.selectedHazlocClass\\\"\\n                          id=\\\"selectedHazlocTemperature\\\"\\n                          class=\\\"form-control selectForOpenModal\\\"\\n                          [(ngModel)]=\\\"electricalItem.selectedHazlocTemperature\\\"\\n                          #selectedHazlocTemperature=\\\"ngModel\\\"\\n                          name=\\\"selectedHazlocTemperature\\\"\\n                        >\\n                          <option\\n                            *ngFor=\\\"let currentHazlocTemperature of electricalItem.hazlocTemperature\\\" \\n                            [ngValue]=\\\"currentHazlocTemperature\\\"\\n                            [selected]=\\\"currentHazlocTemperature==electricalItem.selectedHazlocTemperature\\\"\\n                          >\\n                            {{currentHazlocTemperature}}\\n                          </option>\\n                        </select>\\n                        <button\\n                          type=\\\"button\\\"\\n                          class=\\\"btn btn-outline-secondary btnPlus fa fa-plus\\\"\\n                          data-toggle=\\\"tooltip\\\"\\n                          data-placement=\\\"top\\\"\\n                          title=\\\"Add new item\\\"\\n                          [disabled]=\\\"!electricalItem.selectedHazlocClass || electricalItem.selectedHazlocClass == 'General'\\\"\\n                          (click)=\\\"hazlocTemperatureModal.showAddModal()\\\"\\n                        ></button>\\n                        <button\\n                          type=\\\"button\\\"\\n                          class=\\\"btn btn-outline-secondary btnMinus fa fa-minus\\\"\\n                          data-toggle=\\\"tooltip\\\"\\n                          data-placement=\\\"top\\\"\\n                          title=\\\"Drop selected item\\\"\\n                          (click)=\\\"hazlocTemperatureModal.showDropModal(dropElementFlag)\\\"\\n                          [disabled]=\\\"electricalItem.hazlocTemperature.length == 0 || !electricalItem.selectedHazlocClass || electricalItem.selectedHazlocClass == 'General'\\\"\\n                        ></button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n      <div class=\\\"d-flex justify-content-end\\\">\\n        <!--<div class=\\\"d-flex justify-content-end\\\">-->\\n          <div class=\\\"mr-auto p-2\\\">\\n            <a routerLink=\\\"/project/{{projectId}}/electricals/\\\" class=\\\"btn btn-primary\\\">Back</a>\\n          </div>\\n          <div class=\\\"p-2 form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!electricalForm.form.valid\\\">Update/Create</button>\\n          </div>\\n      <!--  </div>-->\\n  <!--      <div class=\\\"form-group\\\">\\n          <a routerLink=\\\"/project/{{projectId}}/electricals/\\\" class=\\\"btn btn-primary\\\">Back</a>\\n          <button class=\\\"btn btn-danger\\\">Delete</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!electricalForm.form.valid\\\">Update/Create</button>\\n        </div>\\n      -->\\n      </div>\\n      <div *ngIf=\\\"sizeWindow > 576; else werticalTable\\\">\\n        <div class=\\\"row achievements-wrapper\\\">\\n          <table class=\\\"table table-bordered\\\">\\n          <thead>\\n            <tr>\\n              <th>Rev.</th>\\n              <th>Equipment Tag</th>\\n              <th>Equipment Description</th>\\n              <th>Load Type</th>\\n              <th>System Voltage</th>\\n              <th>Power System</th>\\n              <th>Nameplate Rating</th>\\n              <th>Units</th>\\n              <th>Total % PF</th>\\n              <th>Total % EFF</th>\\n              <th>Motor SF</th>\\n              <th>Motor Code</th>\\n              <th>Load Factor %</th>\\n              <th>Load Duty</th>\\n              <th>Total Connected FLA</th>\\n              <th>Total Connected KW</th>\\n              <th>Total Connected KVAR</th>\\n              <th>Total Connected KVA</th>\\n              <th>Total Demand FLA</th>\\n              <th>Total Demand KW</th>\\n              <th>Total Demand KVAR</th>\\n              <th>Total Demand KVA</th>\\n              <th>Total Scenario 1 Load Factor %</th>\\n              <th>Total Scenario 1 FLA</th>\\n              <th>Total Scenario 1 KW</th>\\n              <th>Total Scenario 1 KVAR</th>\\n              <th>Total Scenario 1 KVA</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>{{electricalItem?.revision}}</td>                         <!-- Rev. -->\\n              <td>{{electricalItem?.equipmentTag}}</td>                     <!-- Equipment Tag -->\\n              <td>{{electricalItem?.selectedEquipmentDescription}}</td>     <!-- Equipment Description -->\\n              <td>{{electricalItem?.selectedEquipmentType}}</td>            <!-- Load Type -->\\n              <td>{{electricalItem?.selectedVoltage?.name}}</td>             <!-- System Voltage -->\\n              <td>{{electricalItem?.selectedPowerSystem}}</td>              <!-- Power System -->\\n              <td>{{electricalItem?.nameplateRating}}</td>                  <!-- Nameplate Rating -->\\n              <td>{{electricalItem?.selectedUnits}}</td>                    <!-- Units -->\\n              <td>{{electricalItem?.totalPF}}</td>                          <!-- Total % PF -->\\n              <td>{{electricalItem?.totalEFF}}</td>                         <!-- Total % EFF -->\\n              <td>{{electricalItem?.selectedMotorSF}}</td>                  <!-- Motor SF -->\\n              <td>{{electricalItem?.selectedMotorCode}}</td>                <!-- Motor Code -->\\n              <td>{{electricalItem?.loadFactor}}</td>                       <!-- Load Factor % -->\\n              <td>{{electricalItem?.selectedLoadDuty}}</td>                 <!-- Load Duty -->\\n              <td>{{electricalItem?.totalConectedFla}}</td>                 <!-- Total Connected FLA -->\\n              <td>{{electricalItem?.totalConectedKW}}</td>                  <!-- Total Connected KW -->\\n              <td>{{electricalItem?.totalConnectedKVAR}}</td>               <!-- Total Connected KVAR -->\\n              <td>{{electricalItem?.totalConnectedKVA}}</td>                <!-- Total Connected KVA -->\\n              <td>{{electricalItem?.totalDemandFLA}}</td>                   <!-- Total Demand FLA -->\\n              <td>{{electricalItem?.totalDemandKW}}</td>                    <!-- Total Demand KW -->\\n              <td>{{electricalItem?.totalDemandKVAR}}</td>                  <!-- Total Demand KVAR -->\\n              <td>{{electricalItem?.totalDemandKVA}}</td>                    <!-- Total Demand KVA -->\\n              <td>{{electricalItem?.scenarioFirstLoadFactor}}</td>          <!-- Total Scenario 1 Load Factor % -->\\n              <td>{{electricalItem?.scenarioFirstFLA}}</td>                  <!-- Total Scenario 1 FLA -->\\n              <td>{{electricalItem?.scenarioFirstKW}}</td>                   <!-- Total Scenario 1 KW -->\\n              <td>{{electricalItem?.scenarioFirstKVAR}}</td>                 <!-- Total Scenario 1 KVAR -->\\n              <td>{{electricalItem?.scenarioFirstKVA}}</td>                  <!-- Total Scenario 1 KVA -->\\n            </tr>\\n          </tbody>\\n          </table>\\n      </div>\\n      </div>\\n      <ng-template #werticalTable>\\n        <div class=\\\"row\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <tr>\\n              <td><strong>Rev.</strong></td>\\n              <td>{{electricalItem?.revision}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Equipment Tag</strong></td>\\n              <td>{{electricalItem?.equipmentTag}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Equipment Description</strong></td>\\n              <td>{{electricalItem?.selectedEquipmentDescription}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Load Type</strong></td>\\n              <td>{{electricalItem?.selectedEquipmentType}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>System Voltage</strong></td>\\n              <td>{{electricalItem?.selectedVoltage?.name}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Power System</strong></td>\\n              <td>{{electricalItem?.selectedPowerSystem}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Nameplate Rating</strong></td>\\n              <td>{{electricalItem?.nameplateRating}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Units</strong></td>\\n              <td>{{electricalItem?.selectedUnits}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total % PF</strong></td>\\n              <td>{{electricalItem?.totalPF}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total % EFF</strong></td>\\n              <td>{{electricalItem?.totalEFF}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Motor SF</strong></td>\\n              <td>{{electricalItem?.selectedMotorSF}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Motor Code</strong></td>\\n              <td>{{electricalItem?.selectedMotorCode}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Load Factor %</strong></td>\\n              <td>{{electricalItem?.loadFactor}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Load Duty</strong></td>\\n              <td>{{electricalItem?.selectedLoadDuty}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Connected FLA</strong></td>\\n              <td>{{electricalItem?.totalConectedFla}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Connected KW</strong></td>\\n              <td>{{electricalItem?.totalConectedKW}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Connected KVAR</strong></td>\\n              <td>{{electricalItem?.totalConnectedKVAR}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Connected KVA</strong></td>\\n              <td>{{electricalItem?.totalConnectedKVA}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Demand FLA</strong></td>\\n              <td>{{electricalItem?.totalDemandFLA}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Demand KW</strong></td>\\n              <td>{{electricalItem?.totalDemandKW}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Demand KVAR</strong></td>\\n              <td>{{electricalItem?.totalDemandKVAR}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Demand KVA</strong></td>\\n              <td>{{electricalItem?.totalDemandKVA}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Scenario 1 Load Factor %</strong></td>\\n              <td>{{electricalItem?.scenarioFirstLoadFactor}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Scenario 1 FLA</strong></td>\\n              <td>{{electricalItem?.scenarioFirstFLA}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Scenario 1 KW</strong></td>\\n              <td>{{electricalItem?.scenarioFirstKW}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Scenario 1 KVAR</strong></td>\\n              <td>{{electricalItem?.scenarioFirstKVAR}}</td>\\n            </tr>\\n            <tr>\\n              <td><strong>Total Scenario 1 KVA</strong></td>\\n              <td>{{electricalItem?.scenarioFirstKVA}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </ng-template>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteElectrical(electricalItem._id)\\\">Delete</button>\\n    </div>\\n    <!--START MODALS -->\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.equipmentType\\\" [selectedValue]=\\\"electricalItem?.selectedEquipmentType\\\" [title]=\\\"equipmentType\\\" #equipmentTypeModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.pidDrawing\\\" [selectedValue]=\\\"electricalItem?.selectedPidDrawing\\\" [title]=\\\"pidDraving\\\" #pidDrawingModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.layoutDrawing\\\" [selectedValue]=\\\"electricalItem?.selectedLayoutDrawing\\\" [title]=\\\"layoutDrawing\\\" #layoutDrawingModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.sldDraving\\\" [selectedValue]=\\\"electricalItem?.selectedSldDraving\\\" [title]=\\\"sldDraving\\\" #sldDravingModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.locationArea\\\" [selectedValue]=\\\"electricalItem?.selectedLocationArea\\\" [title]=\\\"locationArea\\\" #locationAreaModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"productsAfterChangeEvent\\\" [selectedValue]=\\\"electricalItem?.selectedVoltage?.name\\\" [title]=\\\"voltage\\\" #voltageModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.equipmentDescription\\\" [selectedValue]=\\\"electricalItem?.selectedEquipmentDescription\\\" [title]=\\\"equipmentDescription\\\" #equipmentDescriptionModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.hazlocZone\\\" [selectedValue]=\\\"electricalItem?.selectedHazlocZone\\\" [title]=\\\"hazlocZone\\\" #hazlocZoneModal></app-electricals-modal>\\n    <app-electricals-modal [dataValue]=\\\"electricalItem?.hazlocTemperature\\\" [selectedValue]=\\\"electricalItem?.selectedHazlocTemperature\\\" [title]=\\\"hazlocTemperature\\\" #hazlocTemperatureModal></app-electricals-modal>\\n    <!-- END MODALS -->\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.html\n// module id = ../../../../../src/app/components/electrical-item/electrical-item.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, HostListener, DoCheck } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgModel } from '@angular/forms';\n\nimport { ElectricalService } from '../../services/electrical.service';\n\n@Component({\n  selector: 'app-electrical-item',\n  templateUrl: './electrical-item.component.html',\n  styleUrls: ['./electrical-item.component.css']\n})\nexport class ElectricalItemComponent implements OnInit, DoCheck {\n  projectId: any;\n  electricalId: any;\n  electricalItem: any;\n  sizeWindow: any;\n  productsAfterChangeEvent = [];\n  //\n  selectedItemVoltage: any;\n  //\n  project: any;\n  parentList: any;\n  presetParentTag: any;\n  //\n  dropElementFlag: boolean = true;\n  //\n  equipmentType: string = \"Equipment Type\";\n  pidDraving: string = \"Pid Drawing\";\n  layoutDrawing: string = \"Layout Drawing\";\n  sldDraving: string = \"SLD Drawing\";\n  locationArea: string = \"Location/Area\";\n  equipmentDescription: string = \"Equipment Description\";\n  voltage: string = \"Voltage\";\n  hazlocZone: string = \"Hazloc Zone\";\n  hazlocTemperature: string = \"Hazloc Temperature\";\n//\n  @ViewChild('selectedHazlocZone') private selectedHazlocZone: NgModel;\n  @ViewChild('selectedHazlocTemperature') private selectedHazlocTemperature: NgModel;\n  @ViewChild('selectedHazlocGroup') private selectedHazlocGroup: NgModel;\n  //\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    event.target.innerWidth;\n    this.sizeWindow = event.target.innerWidth;\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private electricalService: ElectricalService\n  ) {\n    this.projectId = this.route.snapshot.params['id'];\n    this.electricalId = this.route.snapshot.params['electricalid'];\n    this.sizeWindow = window.innerWidth;\n   }\n\n  ngOnInit() {\n    this.electricalService.getElectricalItem(this.projectId, this.electricalId).subscribe(electricals => {\n      this.electricalItem = electricals.electrical;\n      this.productsAfterChangeEvent = electricals.electrical.voltage.filter(p => p.powerSystemType == electricals.electrical.selectedPowerSystem);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.electricalService.getElectricals(this.projectId).subscribe(electricalList => {\n      this.project = electricalList;\n      this.parentList = [];\n      for(let key in this.project.electricals){\n        if(this.project.electricals[key]._id == this.electricalId){\n\n        }else {\n          this.parentList.push(this.project.electricals[key].equipmentTag);\n        }\n      }\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  ngDoCheck() {\n    if(!this.electricalItem){\n      return;\n    } else {\n    this.recalculationDependentValues();\n    }\n  }\n\n\n  electricalChildList(){\n    if(this.electricalItem.selectedParentTag){\n      if(this.presetParentTag == this.electricalItem.selectedParentTag){\n        return;\n      } else {\n        for(let i=0; i<this.project.electricals.length; ++i){\n          let tempElectricalItem = this.project.electricals[i];\n          for(let j=0; j<tempElectricalItem.chiildList.length; ++j){\n            let childElement = tempElectricalItem.chiildList[j];\n            if(childElement._id == this.electricalItem._id){\n              tempElectricalItem.chiildList.splice(j, 1);\n              this.electricalService.updateElectricalItem(this.projectId, tempElectricalItem._id, tempElectricalItem).subscribe(res => {\n                console.log(res);\n              }, (err) => {\n                console.log(err);\n              });\n            }\n            console.log(tempElectricalItem.chiildList);\n          }\n          if(tempElectricalItem.equipmentTag == this.electricalItem.selectedParentTag){\n            this.project.electricals[i].chiildList.push(this.electricalItem);\n            let temp = this.project.electricals[i];\n            this.electricalService.updateElectricalItem(this.projectId, tempElectricalItem._id, temp).subscribe(res => {\n              console.log(res);\n            }, (err)=>{\n              console.log(err);\n            });\n            return;\n          }\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  optionChanged($event) {\n    this.selectedHazlocZone.reset(null);\n    this.selectedHazlocTemperature.reset(null);\n    this.selectedHazlocGroup.reset(null);\n  }\n\n  typeChanged() {\n    if(!this.electricalItem){\n      return;\n    } else {\n      this.productsAfterChangeEvent = this.electricalItem.voltage.filter(p => p.powerSystemType == this.electricalItem.selectedPowerSystem);\n    }\n  }\n\n  saveElectrical(idElectrical, data){\n    this.selectedItemVoltage = data.selectedVoltage;\n    data.selectedVoltage = {};\n    data.selectedVoltage.name = this.selectedItemVoltage;\n    data.voltage = this.changeVoltageArrayObject(this.productsAfterChangeEvent, this.electricalItem.voltage);\n    data.selectedVoltage.powerSystemType = data.selectedPowerSystem;\n    data.pidDrawing = this.electricalItem.pidDrawing;\n    data.layoutDrawing = this.electricalItem.layoutDrawing;\n    data.sldDraving = this.electricalItem.sldDraving;\n    data.equipmentType = this.electricalItem.equipmentType;\n    data.locationArea = this.electricalItem.locationArea;\n    data.equipmentDescription = this.electricalItem.equipmentDescription;\n    data.hazlocZone = this.electricalItem.hazlocZone;\n    data.hazlocTemperature = this.electricalItem.hazlocTemperature;\n    //\n    data.totalConectedFla = this.electricalItem.totalConectedFla || 0;\n    data.totalConectedKW  = this.electricalItem.totalConectedKW || 0;\n    data.totalConnectedKVAR = this.electricalItem.totalConnectedKVAR || 0;\n    data.totalConnectedKVA = this.electricalItem.totalConnectedKVA || 0;\n    data.totalDemandFLA = this.electricalItem.totalDemandFLA || 0;\n    data.totalDemandKW = this.electricalItem.totalDemandKW || 0;\n    data.totalDemandKVAR = this.electricalItem.totalDemandKVAR || 0;\n    data.totalDemandKVA = this.electricalItem.totalDemandKVA || 0;\n    data.scenarioFirstFLA = this.electricalItem.scenarioFirstFLA || 0;\n    data.scenarioFirstKW = this.electricalItem.scenarioFirstKW || 0;\n    data.scenarioFirstKVAR = this.electricalItem.scenarioFirstKVAR || 0;\n    data.scenarioFirstKVA = this.electricalItem.scenarioFirstKVA || 0;\n    //\n    this.electricalService.updateElectricalItem(this.projectId, idElectrical, data).subscribe(res => {\n      let id = res['_id'];\n      this.router.navigate(['project', this.projectId, 'electricals']);\n    }, (err) => {\n      console.log(err);\n    });\n    this.electricalChildList();\n  }\n\n  deleteElectrical(electricalItemId){\n    if(this.electricalItem.chiildList.length >= 1){\n      for(let i=0; i<this.project.electricals.length; ++i){\n        let temporaryElectricalItem = this.project.electricals[i];\n        if(temporaryElectricalItem.selectedParentTag === this.electricalItem.equipmentTag){\n          temporaryElectricalItem.selectedParentTag = '';\n          console.log(temporaryElectricalItem);\n          this.electricalService.updateElectricalItem(this.projectId, temporaryElectricalItem._id, temporaryElectricalItem).subscribe(res => {\n            console.log(res);\n          }, (err) => {\n            console.log(err);\n          });\n        }\n      }\n    }\n    for(let j=0; j<this.project.electricals.length; ++j){\n      let electricalItemElment = this.project.electricals[j];\n      for(let k=0; k<electricalItemElment.chiildList.length; ++k){\n        let temporalChildElement = electricalItemElment.chiildList[k];\n        if(temporalChildElement._id === this.electricalItem._id){\n          electricalItemElment.chiildList.splice(j, 1);\n          this.electricalService.updateElectricalItem(this.projectId, electricalItemElment._id, electricalItemElment).subscribe(res => {\n            console.log(res);\n          }, (err) => {\n            console.log(err);\n          })\n        }\n        console.log(electricalItemElment);\n      }\n    }\n    this.electricalService.deleteElectricalItem(this.projectId, electricalItemId).subscribe(res => {\n      this.router.navigate(['project', this.projectId, 'electricals']);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  changeVoltageArrayObject(productsAfterChange, projectData){\n    let arayObjectsAfterFilter = projectData.filter(p => p.powerSystemType != productsAfterChange[0].powerSystemType);\n    for(let i=0; i<productsAfterChange.length; ++i){\n      let itemElement = productsAfterChange[i];\n      arayObjectsAfterFilter.push(itemElement);\n    }\n    return arayObjectsAfterFilter;\n  }\n\n  //method for calculate dependencies\n  recalculationDependentValues(){\n    this.electricalItem.totalConectedFla = 0;\n    this.electricalItem.totalConectedKW = 0;\n    this.electricalItem.totalConnectedKVA = 0;\n    this.electricalItem.totalConnectedKVAR = 0;\n\n    this.electricalItem.totalDemandFLA = 0;\n    this.electricalItem.totalDemandKW = 0;\n    this.electricalItem.totalDemandKVAR = 0;\n    this.electricalItem.totalDemandKVA = 0;\n\n    this.electricalItem.scenarioFirstFLA = 0;\n    this.electricalItem.scenarioFirstKW = 0;\n    this.electricalItem.scenarioFirstKVAR = 0;\n    this.electricalItem.scenarioFirstKVA = 0;\n//\n    let voltageValue = this.electricalItem.selectedVoltage.name;\n    let toSimbol = voltageValue.search(\" \");\n    let voltageCalcValue = voltageValue.substring(0, toSimbol);\n    let parsingValue = parseInt(voltageCalcValue);\n//\n    if(this.electricalItem.selectedPowerSystem == this.electricalItem.powerSystem[0]){                // AC-3P ALL CHECKED+2\n      if(!this.electricalItem.totalPF){\n        this.electricalItem.totalPF = 0;\n      }\n      if(!this.electricalItem.totalEFF){\n        this.electricalItem.totalEFF = 0;\n      }\n      switch (this.electricalItem.selectedUnits) {\n        case this.electricalItem.units[0]:                                                              // A check+2\n          this.electricalItem.totalConectedFla = parseFloat(this.electricalItem.nameplateRating);\n          break;\n        case this.electricalItem.units[1]:                                                              // HP check+2\n          if(this.electricalItem.selectedVoltage.name && this.electricalItem.totalPF != 0 && this.electricalItem.totalEFF != 0){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating)*746)/(parsingValue * 1.73 * this.electricalItem.totalPF * this.electricalItem.totalEFF)*10000;\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          break;\n        case this.electricalItem.units[2]:                                                              // KW check+2\n          if(this.electricalItem.selectedVoltage.name && this.electricalItem.totalPF != 0){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating) * 1000) / (parsingValue * 1.73 * this.electricalItem.totalPF / 100);\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          break;\n        case this.electricalItem.units[3]:                                                              // KVA check+2\n          if(this.electricalItem.selectedVoltage.name){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating)*1000)/(parsingValue*1.73);\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          }\n          break;\n        default:\n          break;\n      }     \n      let tempTotalConnectedKVA = this.electricalItem.totalConectedFla * parsingValue * 1.73/1000;\n      this.electricalItem.totalConnectedKVA = Math.ceil(tempTotalConnectedKVA*100)/100;\n      let tempTotalConectedKW = this.electricalItem.totalConnectedKVA * this.electricalItem.totalPF / 100;\n      this.electricalItem.totalConectedKW =  Math.ceil(tempTotalConectedKW*100)/100;\n      if(this.electricalItem.totalConectedKW == 0){\n        this.electricalItem.totalConnectedKVAR = 0;\n      } else {\n        let tempTotalConnectedKVAR = Math.sqrt(Math.pow(this.electricalItem.totalConnectedKVA, 2) - Math.pow(this.electricalItem.totalConectedKW, 2));\n        this.electricalItem.totalConnectedKVAR =  Math.ceil(tempTotalConnectedKVAR*100)/100;\n      }\n    } else if (this.electricalItem.selectedPowerSystem == this.electricalItem.powerSystem[1]) {     //AC-1P ALL CHECKED+2\n      if(!this.electricalItem.totalPF){\n        this.electricalItem.totalPF = 0;\n      }\n      if(!this.electricalItem.totalEFF){\n        this.electricalItem.totalEFF = 0;\n      }\n      switch (this.electricalItem.selectedUnits) {\n        case this.electricalItem.units[0]:                                                          //A check+2\n          this.electricalItem.totalConectedFla = parseFloat(this.electricalItem.nameplateRating);\n          break;\n        case this.electricalItem.units[1]:                                                          // HP check+2\n          if(this.electricalItem.selectedVoltage.name && this.electricalItem.totalPF != 0 && this.electricalItem.totalEFF != 0){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating)*746)/(parsingValue * this.electricalItem.totalPF * this.electricalItem.totalEFF)*10000;\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          break;\n        case this.electricalItem.units[2]:                                                          // KW check+2\n          if(this.electricalItem.selectedVoltage.name && this.electricalItem.totalPF != 0){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating) * 1000) / (parsingValue * this.electricalItem.totalPF / 100);\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          break;\n        case this.electricalItem.units[3]:                                                          // KVA check+2\n          if(this.electricalItem.selectedVoltage.name){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating)*1000)/(parsingValue);\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          }\n          break;\n        default:\n        break;\n      }\n      let tempTotalConnectedKVA = this.electricalItem.totalConectedFla * parsingValue/1000;\n      this.electricalItem.totalConnectedKVA = Math.ceil(tempTotalConnectedKVA*100)/100;\n      let tempTotalConectedKW = this.electricalItem.totalConnectedKVA * this.electricalItem.totalPF / 100;\n      this.electricalItem.totalConectedKW =  Math.ceil(tempTotalConectedKW*100)/100;\n      let tempTotalConnectedKVAR = Math.sqrt(Math.pow(this.electricalItem.totalConnectedKVA, 2) - Math.pow(this.electricalItem.totalConectedKW, 2));\n      this.electricalItem.totalConnectedKVAR =  Math.ceil(tempTotalConnectedKVAR*100)/100;\n\n    } else if(this.electricalItem.selectedPowerSystem == this.electricalItem.powerSystem[2]){       //DC ALL CHECKED+2\n      if(!this.electricalItem.totalEFF){\n        this.electricalItem.totalEFF = 0;\n      }\n      switch (this.electricalItem.selectedUnits) {\n        case this.electricalItem.units[0]:                                                          //A check+2\n          this.electricalItem.totalConectedFla = parseFloat(this.electricalItem.nameplateRating);\n          this.electricalItem.totalConnectedKVA = 0;\n          this.electricalItem.totalConnectedKVAR = 0;\n          break;\n        case this.electricalItem.units[1]:                                                          // HP check+2\n          if(this.electricalItem.selectedVoltage.name && this.electricalItem.totalEFF != 0){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating)*746)/(parsingValue * this.electricalItem.totalEFF)*100;\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          this.electricalItem.totalConnectedKVA = 0;\n          this.electricalItem.totalConnectedKVAR = 0;\n          break;\n        case this.electricalItem.units[2]:                                                          // KW check+2\n          if(this.electricalItem.selectedVoltage.name){\n            let temporalTotalConectedFla = (parseFloat(this.electricalItem.nameplateRating) * 1000) / parsingValue;\n            this.electricalItem.totalConectedFla = Math.ceil(temporalTotalConectedFla*100)/100;\n          } else {\n            this.electricalItem.totalConectedFla = 0;\n          }\n          this.electricalItem.totalConnectedKVA = 0;\n          this.electricalItem.totalConnectedKVAR = 0;\n          break;\n        default:\n          this.electricalItem.totalConectedFla = 0;\n          this.electricalItem.totalConectedKW = 0;\n          this.electricalItem.totalConnectedKVA = 0;\n          this.electricalItem.totalConnectedKVAR = 0;\n          break;\n      }\n      let tempTotalConectedKW = this.electricalItem.totalConectedFla * parsingValue/1000;\n      this.electricalItem.totalConectedKW =  Math.ceil(tempTotalConectedKW*100)/100;\n    }\n    let temporalTotalDemandFLA = (this.electricalItem.totalConectedFla * this.electricalItem.loadFactor)/100;\n    this.electricalItem.totalDemandFLA = Math.ceil(temporalTotalDemandFLA*100)/100;\n    let temporalTotalDemandKW = (this.electricalItem.totalConectedKW * this.electricalItem.loadFactor)/100;\n    this.electricalItem.totalDemandKW = Math.ceil(temporalTotalDemandKW*100)/100;\n    let temporalTotalDemandKVAR = (this.electricalItem.totalConnectedKVAR * this.electricalItem.loadFactor)/100;\n    this.electricalItem.totalDemandKVAR = Math.ceil(temporalTotalDemandKVAR*100)/100;\n    let temporalTotalDemandKVA = (this.electricalItem.totalConnectedKVA * this.electricalItem.loadFactor)/100;\n    this.electricalItem.totalDemandKVA = Math.ceil(temporalTotalDemandKVA*100)/100;\n\n    let scenarioFirstLoadFactor = parseFloat(this.electricalItem.scenarioFirstLoadFactor);\n    let temporalScenarioFirstFLA = (this.electricalItem.totalConectedFla * scenarioFirstLoadFactor)/100;\n    this.electricalItem.scenarioFirstFLA = Math.ceil(temporalScenarioFirstFLA*100)/100;\n    let temporalScenarioFirstKW = (this.electricalItem.totalConectedKW * scenarioFirstLoadFactor)/100;\n    this.electricalItem.scenarioFirstKW = Math.ceil(temporalScenarioFirstKW*100)/100;\n    let temporalScenarioFirstKVAR =(this.electricalItem.totalConnectedKVAR * scenarioFirstLoadFactor)/100;\n    this.electricalItem.scenarioFirstKVAR = Math.ceil(temporalScenarioFirstKVAR*100)/100;\n    let temporalScenarioFirstKVA = (this.electricalItem.totalConnectedKVA * scenarioFirstLoadFactor)/100;\n    this.electricalItem.scenarioFirstKVA = Math.ceil(temporalScenarioFirstKVA*100)/100;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/electrical-item/electrical-item.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"thead th {\\r\\n    font-size: 0.6rem;\\r\\n  }\\r\\n  tbody tr td  {\\r\\n    font-size: 0.6rem;\\r\\n  }\\r\\n  .achievements-wrapper {\\r\\n    height: auto; \\r\\n    overflow: auto;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.css\n// module id = ../../../../../src/app/components/electrical-list/electrical-list.component.css\n// module chunks = main","module.exports = \"<!--\\n<div class=\\\"container\\\">\\n  <div class=\\\"pt-2\\\">\\n    <h1>Electricals List\\n      <a class=\\\"btn btn-primary\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add new electrical\\\" (click)=\\\"saveElectrical()\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n    </h1>\\n  </div>\\n  <div class=\\\"row achievements-wrapper\\\">\\n    <table class=\\\"table table-sm table-bordered table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th></th>\\n          <th>Rev.</th>\\n          <th>Equipment Tag</th>\\n          <th>Equipment Description</th>\\n          <th>Load Type</th>\\n          <th>System Voltage</th>\\n          <th>Power System</th>\\n          <th>Nameplate Rating</th>\\n          <th>Units</th>\\n          <th>Total % PF</th>\\n          <th>Total % EFF</th>\\n          <th>Motor Sf</th>\\n          <th>Motor Code</th>\\n          <th>Load Duty</th>\\n          <th>Total Connected FLA</th>\\n          <th>Total Connected KW</th>\\n          <th>Total Connected KVAR</th>\\n          <th>Total Connected KVA</th>\\n          <th>Load Factor %</th>\\n          <th>Total Demand FLA</th>\\n          <th>Total Demand KW</th>\\n          <th>Total Demand KVAR</th>\\n          <th>Total Demand KVA</th>\\n          <th>Total Scenario 1 LoadFactor %</th>\\n          <th>Total Scenario 1 FLA</th>\\n          <th>Total Scenario 1 KW</th>\\n          <th>Total Scenario 1 KVAR</th>\\n          <th>Total Scenario1 KVA</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let electrical of electricals?.electricals\\\">\\n          <tr *ngIf=\\\"!electrical.selectedParentTag\\\">\\n            <td></td>\\n            <td>\\n              <a routerLink=\\\"/project/{{projectId}}/electricals/{{electrical._id}}\\\">{{electrical.revision}}</a>\\n            </td>                                                                                                               Rev \\n            <td>{{electrical?.equipmentTag}}</td>                                                                               Equipment Tag \\n            <td></td>                                                                                                           Equipment Description \\n            <td>{{electrical?.selectedEquipmentType}}</td>                                                                      Load Type \\n            <td>{{electrical?.selectedVoltage.name}}</td>                                                                       System Voltage \\n            <td>{{electrical?.selectedPowerSystem}}</td>                                                                        Power System \\n            <td>{{electrical?.nameplateRating}}</td>                                                                            Nameplate Rating \\n            <td>{{electrical?.selectedUnits}}</td>                                                                              Units \\n            <td>{{electrical?.totalPF}}</td>                                                                                    Total % PF \\n            <td>{{electrical?.totalEFF}}</td>                                                                                   Total % EFF \\n            <td>{{electrical?.selectedMotorSF}}</td>                                                                            Motor Sf \\n            <td>{{electrical?.selectedMotorCode}}</td>                                                                          Motor Code \\n            <td>{{electrical?.selectedLoadDuty}}</td>                                                                           Load Duty \\n            <td>{{electrical?.totalConectedFla}}</td>                                                                           Total Connected FLA \\n            <td>{{electrical?.totalConectedKW}}</td>                                                                            Total Connected KW \\n            <td>{{electrical?.totalConnectedKVAR}}</td>                                                                         Total Connected KVAR \\n            <td>{{electrical?.totalConnectedKVA}}</td>                                                                          Total Connected KVA \\n            <td>{{electrical?.loadFactor}}</td>                                                                                 Load Factor % \\n            <td>{{electrical?.totalDemandFLA}}</td>                                                                             Total Demand FLA \\n            <td>{{electrical?.totalDemandKW}}</td>                                                                              Total Demand KW \\n            <td>{{electrical?.totalDemandKVAR}}</td>                                                                            Total Demand KVAR \\n            <td>{{electrical?.totalDemandKVA}}</td>                                                                             Total Demand KVA \\n            <td>{{electrical?.scenarioFirstLoadFactor}}</td>                                                                    Total Scenario 1 LoadFactor % \\n            <td>{{electrical?.scenarioFirstFLA}}</td>                                                                           Total Scenario 1 FLA \\n            <td>{{electrical?.scenarioFirstKW}}</td>                                                                            Total Scenario 1 KW \\n            <td>{{electrical?.scenarioFirstKVAR}}</td>                                                                          Total Scenario 1 KVAR \\n            <td>{{electrical?.scenarioFirstKVA}}</td>                                                                           Total Scenario1 KVA \\n          </tr>\\n          <tr class=\\\"childs\\\" bgcolor=\\\"#F5F5F5\\\" *ngFor=\\\"let electricalChilds of electrical.chiildList\\\">\\n            <td></td>\\n            <td><a routerLink=\\\"/project/{{projectId}}/electricals/{{electricalChilds._id}}\\\">{{electricalChilds.revision}}</a></td>Rev\\n            <td>{{electricalChilds?.equipmentTag}}</td>                                                                         Equipment Tag \\n            <td></td>                                                                                                           Equipment Description \\n            <td>{{electricalChilds.selectedEquipmentType}}</td>                                                                 Load Type \\n            <td>{{electricalChilds.selectedVoltage.name}}</td>                                                                  System Voltage \\n            <td>{{electricalChilds.selectedPowerSystem}}</td>                                                                   Power System \\n            <td>{{electricalChilds.nameplateRating}}</td>                                                                       Nameplate Rating \\n            <td>{{electricalChilds.selectedUnits}}</td>                                                                         Units \\n            <td>{{electricalChilds.totalPF}}</td>                                                                               Total % PF \\n            <td>{{electricalChilds.totalEFF}}</td>                                                                              Total % EFF \\n            <td>{{electricalChilds.selectedMotorSF}}</td>                                                                       Motor Sf \\n            <td>{{electricalChilds.selectedMotorCode}}</td>                                                                     Motor Code \\n            <td>{{electricalChilds.selectedLoadDuty}}</td>                                                                      Load Duty \\n            <td>{{electricalChilds.totalConectedFla}}</td>                                                                      Total Connected FLA \\n            <td>{{electricalChilds.totalConectedKW}}</td>                                                                       Total Connected KW \\n            <td>{{electricalChilds.totalConnectedKVAR}}</td>                                                                    Total Connected KVAR \\n            <td>{{electricalChilds.totalConnectedKVA}}</td>                                                                     Total Connected KVA \\n            <td>{{electricalChilds.loadFactor}}</td>                                                                            Load Factor % \\n            <td>{{electricalChilds.totalDemandFLA}}</td>                                                                        Total Demand FLA \\n            <td>{{electricalChilds.totalDemandKW}}</td>                                                                         Total Demand KW \\n            <td>{{electricalChilds.totalDemandKVAR}}</td>                                                                       Total Demand KVAR \\n            <td>{{electricalChilds.totalDemandKVA}}</td>                                                                        Total Demand KVA \\n            <td>{{electricalChilds.scenarioFirstLoadFactor}}</td>                                                               Total Scenario 1 LoadFactor % \\n            <td>{{electricalChilds.scenarioFirstFLA}}</td>                                                                      Total Scenario 1 FLA \\n            <td>{{electricalChilds.scenarioFirstKW}}</td>                                                                       Total Scenario 1 KW \\n            <td>{{electricalChilds.scenarioFirstKVAR}}</td>                                                                     Total Scenario 1 KVAR \\n            <td>{{electricalChilds.scenarioFirstKVA}}</td>                                                                      Total Scenario1 KVA \\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n-->\\n<div class=\\\"container\\\">\\n  <div class=\\\"pt-2\\\">\\n    <h1>Electricals List\\n      <a class=\\\"btn btn-primary\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Add new electrical\\\" (click)=\\\"saveElectrical()\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n    </h1>\\n  </div>\\n  <div class=\\\"row achievements-wrapper\\\">\\n    <table class=\\\"table table-sm table-bordered table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th></th>\\n          <th>Rev.</th>\\n          <th>Equipment Tag</th>\\n          <th>Equipment Description</th>\\n          <th>Load Type</th>\\n          <th>System Voltage</th>\\n          <th>Power System</th>\\n          <th>Nameplate Rating</th>\\n          <th>Units</th>\\n          <th>Total % PF</th>\\n          <th>Total % EFF</th>\\n          <th>Motor Sf</th>\\n          <th>Motor Code</th>\\n          <th>Load Duty</th>\\n          <th>Total Connected FLA</th>\\n          <th>Total Connected KW</th>\\n          <th>Total Connected KVAR</th>\\n          <th>Total Connected KVA</th>\\n          <th>Load Factor %</th>\\n          <th>Total Demand FLA</th>\\n          <th>Total Demand KW</th>\\n          <th>Total Demand KVAR</th>\\n          <th>Total Demand KVA</th>\\n          <th>Total Scenario 1 LoadFactor %</th>\\n          <th>Total Scenario 1 FLA</th>\\n          <th>Total Scenario 1 KW</th>\\n          <th>Total Scenario 1 KVAR</th>\\n          <th>Total Scenario1 KVA</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let electrical of electricals?.electricals\\\">\\n          <tr *ngIf=\\\"!electrical.selectedParentTag\\\">\\n            <td></td>\\n            <td><a routerLink=\\\"/project/{{projectId}}/electricals/{{electrical._id}}\\\">{{electrical.revision}}</a></td>  <!-- Rev -->\\n            <td>{{electrical?.equipmentTag}}</td>                                                                             <!-- Equipment Tag -->\\n            <td></td>                                                                                                         <!-- Equipment Description -->\\n            <td>{{electrical?.selectedEquipmentType}}</td>                                                                     <!-- Load Type -->\\n            <td>{{electrical?.selectedVoltage.name}}</td>                                                                      <!-- System Voltage -->\\n            <td>{{electrical?.selectedPowerSystem}}</td>                                                                       <!-- Power System -->\\n            <td>{{electrical?.nameplateRating}}</td>                                                                           <!-- Nameplate Rating -->\\n            <td>{{electrical?.selectedUnits}}</td>                                                                             <!-- Units -->\\n            <td>{{electrical?.totalPF}}</td>                                                                                   <!-- Total % PF -->\\n            <td>{{electrical?.totalEFF}}</td>                                                                                  <!-- Total % EFF -->\\n            <td>{{electrical?.selectedMotorSF}}</td>                                                                           <!-- Motor Sf -->\\n            <td>{{electrical?.selectedMotorCode}}</td>                                                                         <!-- Motor Code -->\\n            <td>{{electrical?.selectedLoadDuty}}</td>                                                                          <!-- Load Duty -->\\n            <td>{{electrical?.totalConectedFla}}</td>                                                                          <!-- Total Connected FLA -->\\n            <td>{{electrical?.totalConectedKW}}</td>                                                                           <!-- Total Connected KW -->\\n            <td>{{electrical?.totalConnectedKVAR}}</td>                                                                        <!-- Total Connected KVAR -->\\n            <td>{{electrical?.totalConnectedKVA}}</td>                                                                         <!-- Total Connected KVA -->\\n            <td>{{electrical?.loadFactor}}</td>                                                                                <!-- Load Factor % -->\\n            <td>{{electrical?.totalDemandFLA}}</td>                                                                            <!-- Total Demand FLA -->\\n            <td>{{electrical?.totalDemandKW}}</td>                                                                             <!-- Total Demand KW -->\\n            <td>{{electrical?.totalDemandKVAR}}</td>                                                                           <!-- Total Demand KVAR -->\\n            <td>{{electrical?.totalDemandKVA}}</td>                                                                            <!-- Total Demand KVA -->\\n            <td>{{electrical?.scenarioFirstLoadFactor}}</td>                                                                   <!-- Total Scenario 1 LoadFactor % -->\\n            <td>{{electrical?.scenarioFirstFLA}}</td>                                                                          <!-- Total Scenario 1 FLA -->\\n            <td>{{electrical?.scenarioFirstKW}}</td>                                                                           <!-- Total Scenario 1 KW -->\\n            <td>{{electrical?.scenarioFirstKVAR}}</td>                                                                         <!-- Total Scenario 1 KVAR -->\\n            <td>{{electrical?.scenarioFirstKVA}}</td>                                                                          <!-- Total Scenario1 KVA -->\\n          </tr>\\n          <tr class=\\\"childs\\\" bgcolor=\\\"#F5F5F5\\\" *ngFor=\\\"let electricalChilds of electrical.chiildList\\\">\\n            <td></td>\\n            <td><a routerLink=\\\"/project/{{projectId}}/electricals/{{electricalChilds._id}}\\\">{{electricalChilds.revision}}</a></td>  <!-- Rev -->\\n            <td>{{electricalChilds?.equipmentTag}}</td>                                                                       <!-- Equipment Tag -->\\n            <td></td>                                                                                                         <!-- Equipment Description -->\\n            <td>{{electricalChilds.selectedEquipmentType}}</td>                                                               <!-- Load Type -->\\n            <td>{{electricalChilds.selectedVoltage.name}}</td>                                                                <!-- System Voltage -->\\n            <td>{{electricalChilds.selectedPowerSystem}}</td>                                                                 <!-- Power System -->\\n            <td>{{electricalChilds.nameplateRating}}</td>                                                                     <!-- Nameplate Rating -->\\n            <td>{{electricalChilds.selectedUnits}}</td>                                                                       <!-- Units -->\\n            <td>{{electricalChilds.totalPF}}</td>                                                                             <!-- Total % PF -->\\n            <td>{{electricalChilds.totalEFF}}</td>                                                                            <!-- Total % EFF -->\\n            <td>{{electricalChilds.selectedMotorSF}}</td>                                                                     <!-- Motor Sf -->\\n            <td>{{electricalChilds.selectedMotorCode}}</td>                                                                   <!-- Motor Code -->\\n            <td>{{electricalChilds.selectedLoadDuty}}</td>                                                                    <!-- Load Duty -->\\n            <td>{{electricalChilds.totalConectedFla}}</td>                                                                    <!-- Total Connected FLA -->\\n            <td>{{electricalChilds.totalConectedKW}}</td>                                                                     <!-- Total Connected KW -->\\n            <td>{{electricalChilds.totalConnectedKVAR}}</td>                                                                  <!-- Total Connected KVAR -->\\n            <td>{{electricalChilds.totalConnectedKVA}}</td>                                                                   <!-- Total Connected KVA -->\\n            <td>{{electricalChilds.loadFactor}}</td>                                                                          <!-- Load Factor % -->\\n            <td>{{electricalChilds.totalDemandFLA}}</td>                                                                      <!-- Total Demand FLA -->\\n            <td>{{electricalChilds.totalDemandKW}}</td>                                                                       <!-- Total Demand KW -->\\n            <td>{{electricalChilds.totalDemandKVAR}}</td>                                                                     <!-- Total Demand KVAR -->\\n            <td>{{electricalChilds.totalDemandKVA}}</td>                                                                      <!-- Total Demand KVA -->\\n            <td>{{electricalChilds.scenarioFirstLoadFactor}}</td>                                                             <!-- Total Scenario 1 LoadFactor % -->\\n            <td>{{electricalChilds.scenarioFirstFLA}}</td>                                                                    <!-- Total Scenario 1 FLA -->\\n            <td>{{electricalChilds.scenarioFirstKW}}</td>                                                                     <!-- Total Scenario 1 KW -->\\n            <td>{{electricalChilds.scenarioFirstKVAR}}</td>                                                                   <!-- Total Scenario 1 KVAR -->\\n            <td>{{electricalChilds.scenarioFirstKVA}}</td>                                                                    <!-- Total Scenario1 KVA -->\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.html\n// module id = ../../../../../src/app/components/electrical-list/electrical-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ElectricalService } from '../../services/electrical.service';\n\n@Component({\n  selector: 'app-electrical-list',\n  templateUrl: './electrical-list.component.html',\n  styleUrls: ['./electrical-list.component.css']\n})\nexport class ElectricalListComponent implements OnInit {\n  projectId: String;\n  electricals: Object;\n  electrical: any;\n\n  constructor(\n    private electricalService: ElectricalService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.projectId = this.route.snapshot.params['id'];\n   }\n\n  ngOnInit() {\n    this.electricalService.getElectricals(this.projectId).subscribe(electricalList => {\n      this.electricals = electricalList;\n      this.recalculationParentValeu(electricalList);\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  saveElectrical() {\n    this.electrical = {};\n    this.electrical.length = 0;\n    this.electricalService.createElectrical(this.projectId, this.electrical).subscribe(\n      (res: Array<string>) => {\n        let id = res['_id'];\n        let responseId = res[res.length-1]['_id']\n        let routeToElectricalItem = '/project/'+this.route.snapshot.params['id']+'/electricals/'+responseId;\n        this.router.navigate([routeToElectricalItem]);\n      }, (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  recalculationParentValeu(projects){\n    for(let i=0; i<projects.electricals.length; i++){\n      let electricalItem = projects.electricals[i];\n      if(electricalItem.chiildList.length > 0 ){\n        electricalItem.totalPF = 0;\n        electricalItem.totalEFF = 0;\n        electricalItem.loadFactor = 0;\n        electricalItem.scenarioFirstLoadFactor = 0;\n        electricalItem.totalConnectedKVAR = 0;\n        electricalItem.totalConnectedKVA = 0;\n        electricalItem.totalDemandFLA = 0;\n        electricalItem.totalDemandKW = 0;\n        electricalItem.totalDemandKVAR = 0;\n        electricalItem.totalDemandKVA = 0;\n        electricalItem.scenarioFirstFLA = 0;\n        electricalItem.scenarioFirstKW = 0;\n        electricalItem.scenarioFirstKVAR = 0;\n        electricalItem.scenarioFirstKVA = 0;\n\n        for(let j=0; j<electricalItem.chiildList.length; ++j){\n          let childElement = electricalItem.chiildList[j];\n          electricalItem.totalConectedFla += childElement.totalConectedFla;\n          electricalItem.totalConectedKW += childElement.totalConectedKW;\n          electricalItem.totalConnectedKVAR += childElement.totalConnectedKVAR;\n          electricalItem.totalConnectedKVA += childElement.totalConnectedKVA;\n          //\n          electricalItem.totalPF += childElement.totalPF;\n          electricalItem.totalEFF += childElement.totalEFF;\n          electricalItem.loadFactor += childElement.loadFactor;\n          //\n          electricalItem.totalDemandFLA += childElement.totalDemandFLA;\n          electricalItem.totalDemandKW += childElement.totalDemandKW;\n          electricalItem.totalDemandKVAR += childElement.totalDemandKVAR;\n          electricalItem.totalDemandKVA += childElement.totalDemandKVA;\n          //\n          electricalItem.scenarioFirstLoadFactor += childElement.scenarioFirstLoadFactor;\n          //\n          electricalItem.scenarioFirstFLA += childElement.scenarioFirstFLA;\n          electricalItem.scenarioFirstKW += childElement.scenarioFirstKW;\n          electricalItem.scenarioFirstKVAR += childElement.scenarioFirstKVAR;\n          electricalItem.scenarioFirstKVA += childElement.scenarioFirstKVA;\n        }\n        electricalItem.totalConectedFla = Math.ceil(electricalItem.totalConectedFla*100)/100;\n        electricalItem.totalConectedKW = Math.ceil(electricalItem.totalConectedKW*100)/100;\n        electricalItem.totalConnectedKVAR = Math.ceil(electricalItem.totalConnectedKVAR*100)/100;\n        electricalItem.totalConnectedKVA = Math.ceil(electricalItem.totalConnectedKVA*100)/100;\n        electricalItem.totalDemandKW = Math.ceil(electricalItem.totalDemandKW*100)/100;\n        electricalItem.totalDemandFLA = Math.ceil(electricalItem.totalDemandFLA*100)/100;\n        electricalItem.totalDemandKVAR = Math.ceil(electricalItem.totalDemandKVAR*100)/100;\n        electricalItem.totalDemandKVA = Math.ceil(electricalItem.totalDemandKVA*100)/100;\n        electricalItem.scenarioFirstFLA = Math.ceil(electricalItem.scenarioFirstFLA*100)/100;\n        electricalItem.scenarioFirstKW = Math.ceil(electricalItem.scenarioFirstKW*100)/100;\n        electricalItem.scenarioFirstKVAR = Math.ceil(electricalItem.scenarioFirstKVAR*100)/100;\n        electricalItem.scenarioFirstKVA = Math.ceil(electricalItem.scenarioFirstKVA*100)/100;\n        //console.log(electricalItem.totalDemandFLA);\n        electricalItem.totalPF = Math.ceil((electricalItem.totalPF/electricalItem.chiildList.length)*100)/100;\n        electricalItem.totalEFF = Math.ceil((electricalItem.totalEFF/electricalItem.chiildList.length)*100)/100;\n        electricalItem.loadFactor = Math.ceil((electricalItem.loadFactor/electricalItem.chiildList.length)*100)/100;\n        //electricalItem.selectedMotorSF\n        electricalItem.scenarioFirstLoadFactor = Math.ceil((electricalItem.scenarioFirstLoadFactor/electricalItem.chiildList.length)*100)/100;\n      }\n      console.log(electricalItem)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/electrical-list/electrical-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".carousel-item.active,\\r\\n.carousel-item-next,\\r\\n.carousel-item-prev {\\r\\n  display: block;\\r\\n}\\r\\nspan.home-page-text {\\r\\n  text-align: justify;\\r\\n}\\r\\n.home-page-black-line{\\r\\n  margin-top: 25px; \\r\\n  background-color: black; \\r\\n  width: 97%; \\r\\n  height: 2px; \\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\nspan.affiliations-text{\\r\\n  background-color: white; \\r\\n  padding-left: 5px; \\r\\n  padding-right: 5px; \\r\\n  z-index: 2;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div>\\n  <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\n      <div class=\\\"carousel-item active\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/KErzwkm.jpg\\\">\\n      </div>\\n      <div class=\\\"carousel-item\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/A9YA3cY.jpg\\\">\\n      </div>\\n      <div class=\\\"carousel-item\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/zkEkmZT.jpg\\\">\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Next</span>\\n    </a>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"d-flex mt-3\\\">\\n      <span class=\\\"home-page-text\\\">\\n        <strong>AMP X Consulting Inc.</strong> (AMP X) is a company that’s <strong>20 years</strong> in the making. With multiple decades of experience and \\n        lessons-learned acquired from the completion of more than 100 electrical, instrumentation and controls (E, I and C) \\n        projects, we have developed a solution we feel can truly help our customers deliver their projects better. Through our \\n        AMP X CORE technology and practical project delivery methods that enable thoughtful engineering, we help customers \\n        improve their bottom lines.\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex mt-3\\\">\\n      <span class=\\\"home-page-text\\\">\\n        Using our AMP X CORE technology, paired with subject matter expertise that spans engineering, inspection and hands-on construction, \\n        we go beyond end-to-end E, I and C services. The AMP X CORE technology is a powerful combination that includes a proprietary database \\n        and design tools that are easy to use, inexpensive for our customers and promote the highest safety and quality.\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex mt-3\\\">\\n      <span class=\\\"home-page-text\\\">\\n      An important feature of our project delivery model is that we are able to leave customers with not only a complete set of deliverables, \\n      but also a comprehensive data package to support other project stakeholders, operations, future projects and long-term asset management… \\n      <strong>For no additional cost.</strong>\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex mt-3\\\">\\n      <span class=\\\"home-page-text\\\">\\n        Customers who can benefit from our solutions include end-users such as oil & gas companies, as well as equipment vendors, other engineering service \\n        providers and construction contractors.\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex mt-3 mb-3\\\">\\n      <span class=\\\"home-page-text\\\">\\n        Please refer to the <a class=\\\"text-warning\\\" routerLink=\\\"/about\\\">‘About Us’</a> page for more information, or <a class=\\\"text-warning\\\" routerLink=\\\"/contacts\\\">contact us</a> directly.\\n      </span>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center position-relative\\\">\\n      <div class=\\\"home-page-black-line\\\"></div>\\n      <span class=\\\"h1 affiliations-text\\\">Affiliations</span>\\n    </div>\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-3 mb-3\\\">\\n      <a class=\\\"nounderline ml-1 mr-1\\\" href=\\\"http://www.apega.ca\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/JeRCYyi.png\\\">\\n      </a>\\n      <a class=\\\"nounderline ml-1 mr-1\\\" href=\\\"http://www.aset.ab.ca\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/8K2ITFj.png\\\">\\n      </a>\\n      <a class=\\\"nounderline ml-1 mr-1\\\" href=\\\"http://www.safetycodes.ab.ca\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/C8OAZHC.png\\\">\\n      </a>\\n      <a class=\\\"nounderline ml-1 mr-1\\\" href=\\\"http://www.ecaa.ab.ca\\\">\\n        <img class=\\\"d-block img-fluid\\\" src=\\\"https://i.imgur.com/yHWgTeV.png\\\">\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<h2>Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Company name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"  name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  companyName: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService, \n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      companyName: this.companyName,\n      email: this.email,\n      password: this.password\n    }\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now logged in.', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['project']);\n      } else {\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".modal {\\r\\n    background: rgba(0,0,0,0.6);\\r\\n    padding-top: 3rem;\\r\\n  }\\r\\n  \\r\\n  .modal-dialog {\\r\\n    max-width: 350px!important;\\r\\n  }\\r\\n  input::-webkit-input-placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  input:-ms-input-placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  input::placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  \\r\\n  input:focus::-webkit-input-placeholder { color:transparent; }\\r\\n  input:focus:-moz-placeholder { color:transparent; } /* FF 4-18 */\\r\\n  input:focus::-moz-placeholder { color:transparent; } /* FF 19+ */\\r\\n  input:focus:-ms-input-placeholder { color:transparent; } /* IE 10+ */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.css\n// module id = ../../../../../src/app/components/modals/electricals-modal/electricals-modal.component.css\n// module chunks = main","module.exports = \"<div style=\\\"padding-top: 10rem;\\\"\\n(click)=\\\"onContainerClicked($event)\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" [ngClass]=\\\"{'in': visibleAnimate}\\\"\\n[ngStyle]=\\\"{'display': visible ? 'block' : 'none', 'opacity': visibleAnimate ? 1 : 0}\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{title}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"modalFlag\\\">\\n          <div>\\n            <p>Are you sure you want to delete <strong>{{selectedValue}}</strong> item</p>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!modalFlag\\\" class=\\\"form-inline\\\">\\n          <label class=\\\"pr-2\\\"><strong>Item name:</strong></label>\\n          <input \\n            class=\\\"form-control\\\" \\n            name=\\\"itenElement\\\" \\n            [(ngModel)]=\\\"itenElement\\\" \\n            placeholder='Input new name value'\\n            onfocus=\\\"this.placeholder = ''\\\"\\n            onblur=\\\"this.placeholder = 'Input new name value'\\\"  \\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <div class=\\\"form-group pr-1\\\">\\n              <button *ngIf=\\\"modalFlag\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(selectedValue)\\\">Delete</button>\\n              <button *ngIf=\\\"!modalFlag\\\" class=\\\"btn btn-success\\\" (click)=\\\"addItem(itenElement)\\\" [disabled]=\\\"!itenElement\\\">Add</button>\\n            </div>\\n            <div class=\\\"pl-1 pr-2\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.html\n// module id = ../../../../../src/app/components/modals/electricals-modal/electricals-modal.component.html\n// module chunks = main","//import { Component, OnInit } from '@angular/core';\nimport { Input, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-electricals-modal',\n  templateUrl: './electricals-modal.component.html',\n  styleUrls: ['./electricals-modal.component.css']\n})\nexport class ElectricalsModalComponent {\n  @Input() dataValue;\n  @Input() selectedValue;\n  @Input() title: string;\n\n  itenElement: string;\n  public visible = false;\n  public modalFlag: boolean;\n  private visibleAnimate = false;\n  constructor() { }\n\n  public showAddModal(): void {\n    this.visible = true;\n    setTimeout(() => this.visibleAnimate = true, 100);\n  }\n\n  public showDropModal(flag):void{\n    this.modalFlag = flag;\n    this.visible = true;\n    setTimeout(() => this.visibleAnimate = true, 100);\n  }\n\n  public hide(): void {\n    this.visibleAnimate = false;\n    setTimeout(() => this.visible = false, 300);\n    this.modalFlag = false;\n  }\n\n  public onContainerClicked(event: MouseEvent): void {\n    if ((<HTMLElement>event.target).classList.contains('modal')) {\n      this.hide();\n    }\n  }\n\n  public addItem(itenEl: string){\n    if(typeof this.dataValue[0] == 'string' || typeof this.dataValue[0] == 'undefined' ){\n      this.dataValue.push(itenEl);\n      this.visible = false;\n      setTimeout(() => this.visible = false, 300);\n      this.itenElement = null;\n    } else {\n      let elementArrayObject = {};\n      elementArrayObject['name'] = itenEl;\n      elementArrayObject['powerSystemType'] = this.dataValue[0].powerSystemType;\n      this.dataValue.push(elementArrayObject);\n      this.visible = false;\n      setTimeout(() => this.visible = false, 300);\n      this.itenElement = null;\n    }\n  }\n\n  public deleteItem(itenEl: string){\n    let elementIndex: number;\n    for(let i=0; i<this.dataValue.length; ++i){\n      let arrayElement = this.dataValue[i];\n      if(itenEl === arrayElement){\n        elementIndex = i;\n      }\n    }\n    this.dataValue.splice(elementIndex, 1);\n    this.visible = false;\n    this.modalFlag = false;\n  }\n\n  public close() {\n    this.visible = false;\n    setTimeout(() => this.visible = false, 300);\n    this.modalFlag = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/modals/electricals-modal/electricals-modal.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".modal {\\r\\n    background: rgba(0,0,0,0.6);\\r\\n    padding-top: 3rem;\\r\\n  }\\r\\n  \\r\\n  .modal-dialog {\\r\\n    max-width: 350px!important;\\r\\n  }\\r\\n  input::-webkit-input-placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  input:-ms-input-placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  input::placeholder {\\r\\n    color: gray;\\r\\n    font-style: italic;\\r\\n  }\\r\\n  \\r\\n  input:focus::-webkit-input-placeholder { color:transparent; }\\r\\n  input:focus:-moz-placeholder { color:transparent; } /* FF 4-18 */\\r\\n  input:focus::-moz-placeholder { color:transparent; } /* FF 19+ */\\r\\n  input:focus:-ms-input-placeholder { color:transparent; } /* IE 10+ */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.css\n// module id = ../../../../../src/app/components/modals/projects-modal/projects-modal.component.css\n// module chunks = main","module.exports = \"<div style=\\\"padding-top: 10rem;\\\"\\n(click)=\\\"onContainerClicked($event)\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" [ngClass]=\\\"{'in': visibleAnimate}\\\"\\n[ngStyle]=\\\"{'display': visible ? 'block' : 'none', 'opacity': visibleAnimate ? 1 : 0}\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{title}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"dropFlag == true\\\">\\n          <div>\\n            <p>Are you sure you want to delete <strong>{{project.title}}</strong> project</p>\\n          </div>\\n        </div>\\n        <div class=\\\"form-inline\\\" *ngIf=\\\"changeFlag == true\\\">\\n            <label class=\\\"pr-2\\\"><strong>Project name: </strong></label>\\n            <input \\n              class=\\\"form-control\\\" \\n              name=\\\"itemElement\\\" \\n              [(ngModel)]=\\\"project.title\\\" \\n            />\\n        </div>\\n        <div class=\\\"form-inline\\\" *ngIf=\\\"createFlag == true\\\">\\n          <label class=\\\"pr-2\\\"><strong>Project name: </strong></label>\\n          <input \\n            class=\\\"form-control\\\" \\n            name=\\\"itemElement\\\" \\n            [(ngModel)]=\\\"itemElement\\\" \\n            placeholder='Input new project name'\\n            onfocus=\\\"this.placeholder = ''\\\"\\n            onblur=\\\"this.placeholder = 'Input new project name'\\\"  \\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <div class=\\\"form-group pr-1\\\">\\n              <button *ngIf=\\\"dropFlag == true\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(project)\\\">Delete</button>\\n              <button *ngIf=\\\"changeFlag == true\\\" class=\\\"btn btn-success\\\" (click)=\\\"changeItem(project, project.title)\\\">Change</button>\\n              <button *ngIf=\\\"createFlag == true\\\" class=\\\"btn btn-success\\\" (click)=\\\"addItem(itemElement)\\\" [disabled]=\\\"!itemElement\\\">Add</button>\\n            </div>\\n            <div class=\\\"pl-1 pr-2\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.html\n// module id = ../../../../../src/app/components/modals/projects-modal/projects-modal.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { ProjectService } from '../../../services/project.service'\n\n@Component({\n  selector: 'app-projects-modal',\n  templateUrl: './projects-modal.component.html',\n  styleUrls: ['./projects-modal.component.css']\n})\nexport class ProjectsModalComponent {\n  @Input() dataValue;\n  @Input() selectedValue;\n  @Input() title: string;\n\n  itemElement: string;\n  project: {};\n  public visible = false;\n  public dropFlag: boolean = false;\n  public changeFlag: boolean = false;\n  public createFlag: boolean = false;\n  private visibleAnimate = false;\n\n  constructor(private projectService: ProjectService) { }\n\n  public showAddModal(flag): void {\n    this.createFlag = flag;\n    this.visible = true;\n    setTimeout(() => this.visibleAnimate = true, 100);\n  }\n\n  public showDropModal(flag, itemProject):void{\n    this.dropFlag = flag;\n    this.project = itemProject;\n    this.visible = true;\n    setTimeout(() => this.visibleAnimate = true, 100);\n  }\n\n  public showChangeProjectModal(chengeProject, itemProject){\n    this.changeFlag = chengeProject;\n    this.project = itemProject;\n    this.visible = true;\n    setTimeout(() => this.visibleAnimate = true, 100);\n  }\n\n  public hide(): void {\n    this.visibleAnimate = false;\n    setTimeout(() => this.visible = false, 300);\n    this.dropFlag = false;\n    this.changeFlag = false;\n    this.createFlag = false;\n  }\n\n  public onContainerClicked(event: MouseEvent): void {\n    if ((<HTMLElement>event.target).classList.contains('modal')) {\n      this.hide();\n    }\n  }\n\n  public addItem(itenEl: string){\n    let project = {};\n    project['title'] = itenEl;\n    this.projectService.postProject(project).subscribe(data => {\n      if(data.success){\n        this.dataValue.push(project);\n      } else {\n      \n      }\n    });\n    this.visible = false;\n    this.dropFlag = false;\n    this.changeFlag = false;\n    this.createFlag = false;\n    setTimeout(() => this.visible = false, 300);\n    this.itemElement = null;\n  }\n  \n  public changeItem(project: any, projectTitle: string){\n    let prj = project;\n    let prjName = projectTitle;\n    for (var key in this.dataValue) {\n      if(this.dataValue[key]._id === project._id){\n        this.dataValue[key].title = prjName;\n        console.log(this.dataValue[key].title);\n        this.projectService.updateProject(project._id, this.dataValue[key]).subscribe(data => {\n          if(data.success){\n            console.log(true);\n          } else {\n            console.log(false);\n          }\n        })\n      }\n    }\n    this.visible = false;\n    this.dropFlag = false;\n    this.changeFlag = false;\n    this.createFlag = false;\n    setTimeout(() => this.visible = false, 300);\n    this.itemElement = null;\n  }\n\n  public deleteItem(itenEl: any){\n    let elementIndex: number = itenEl._id;\n    this.projectService.deleteProject(elementIndex).subscribe(data => {\n      if(data.success){\n        this.dataValue.splice(0,1);\n      } else {\n        console.log(false);\n      }\n    });\n    this.visible = false;\n    this.dropFlag = false;\n    this.changeFlag = false;\n    this.createFlag = false;\n  }\n\n  public close() {\n    this.visible = false;\n    setTimeout(() => this.visible = false, 300);\n    this.dropFlag = false;\n    this.changeFlag = false;\n    this.createFlag = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/modals/projects-modal/projects-modal.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">AMPX</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo02\\\" aria-controls=\\\"navbarTogglerDemo02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo02\\\">\\n      <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\"> Home </span></a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"> About Us <span class=\\\"sr-only\\\"> About Us </span></a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"> Services <span class=\\\"sr-only\\\"> Services </span></a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"> Contact Us <span class=\\\"sr-only\\\"> Contact Us </span></a>\\n        </li>\\n        <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/project\\\">Project <span class=\\\"sr-only\\\"> Project </span></a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\"> Login <span class=\\\"sr-only\\\"> Login </span></a>\\n        </li>\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\"> Register <span class=\\\"sr-only\\\"> Register </span></a>\\n        </li>\\n        <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\"> Logout <span class=\\\"sr-only\\\"> Logout </span></a>\\n        </li>\\n        <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\"> Profile <span class=\\\"sr-only\\\"> Profile </span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.userName}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">User email address: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">User first name: {{user.firstName}}</li>\\n    <li class=\\\"list-group-item\\\">User last name: {{user.lastName}}</li>\\n    <li class=\\\"list-group-item\\\">User company name: {{user.companyName}}</li>\\n    <li class=\\\"list-group-item\\\">User from city: {{user.city}}</li>\\n    <li class=\\\"list-group-item\\\">User phone number: {{user.phone}}</li>\\n  </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".breadcrumb {\\r\\n    background-color: white !important;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.css\n// module id = ../../../../../src/app/components/project-dashboard/project-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"project\\\">\\n    <ol class=\\\"breadcrumb\\\">\\n      <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/projects\\\">Projects</a></li>\\n      <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/project-edit', projectId]\\\">{{project.title}}</a></li>\\n      <li class=\\\"breadcrumb-item active\\\">Dashboard</li>\\n    </ol>\\n    <div class=\\\"d-flex justify-content-center pt-3\\\">\\n      <h1>Project <strong>{{project.title}}</strong></h1>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center pt-2\\\">\\n      <h4>To start working</h4>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <div class=\\\"d-flex flex-column\\\">\\n        <div class=\\\"p-2 h5\\\">\\n          <a [routerLink]=\\\"['/project', projectId, 'electricals']\\\">\\n            Electrical Load List\\n          </a>\\n        </div>\\n        <div class=\\\"p-2 h5\\\">Electrical Equipment List</div>\\n        <div class=\\\"p-2 h5\\\">Cable Schedule</div>\\n        <div class=\\\"p-2 h5\\\">Controller Schedule</div>\\n        <div class=\\\"p-2 h5\\\">Instrumentation Index</div>\\n        <div class=\\\"p-2 h5\\\">IO Assignment</div>\\n        <div class=\\\"p-2 h5\\\">IO List</div>\\n      </div>\\n    </div>    \\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.html\n// module id = ../../../../../src/app/components/project-dashboard/project-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-project-dashboard',\n  templateUrl: './project-dashboard.component.html',\n  styleUrls: ['./project-dashboard.component.css']\n})\nexport class ProjectDashboardComponent implements OnInit {\n  project: any;\n  projectId: string;\n  projectTitle: string;\n  constructor(\n    private route: ActivatedRoute,\n    private projectService: ProjectService\n  ) {\n    this.projectId = this.route.snapshot.params['id'];\n  }\n\n  ngOnInit() {\n    this.projectService.getProjectById(this.projectId).subscribe(project => {\n      this.project = project;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/project-dashboard/project-dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/project/project.component.css\n// module id = ../../../../../src/app/components/project/project.component.css\n// module chunks = main","module.exports = \"<!--\\n<div *ngIf=\\\"project\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let itemProject of project\\\">Project Title: {{itemProject.title}}</li>\\n  </ul>\\n</div>\\n\\n[routerLink]=\\\"['/project-create']\\\"\\n\\n-->\\n<div class=\\\"container\\\">\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <h1>List of projects\\n      <a \\n        class=\\\"btn btn-primary\\\"\\n        data-toggle=\\\"tooltip\\\"\\n        data-placement=\\\"top\\\"\\n        title=\\\"Add new project\\\"\\n        (click)=\\\"addProjectModal.showAddModal(createProject)\\\"\\n      >\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n      </a>\\n    </h1>\\n  </div>\\n  <div *ngIf=\\\"project\\\">\\n    <table class=\\\"table table-sm\\\">\\n      <thead>\\n        <tr>\\n          <th>Title</th>\\n<!--          <th>Date create</th>\\n          <th>Date update</th>-->\\n          <th>Action</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let itemProject of project\\\">\\n          <td><a class=\\\"table-link\\\" [routerLink]=\\\"['/project', itemProject._id]\\\"><strong>{{itemProject.title}}</strong></a></td>\\n<!--\\n  \\n  [routerLink]=\\\"['/project', project._id]\\\"\\n\\n  <td>{{project.date_create | date : \\\"medium\\\"}}</td>\\n          <td>{{project.updated_date | date : \\\"medium\\\"}}</td>-->\\n          <td>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <a \\n                  class=\\\"btn btn-success\\\"\\n                  data-toggle=\\\"tooltip\\\"\\n                  data-placement=\\\"top\\\"\\n                  title=\\\"Change project\\\"\\n                  (click)=\\\"addProjectModal.showChangeProjectModal(chengeProject, itemProject)\\\"\\n                >\\n                  <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                </a>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <a \\n                  class=\\\"btn btn-danger\\\"\\n                  data-toggle=\\\"tooltip\\\"\\n                  data-placement=\\\"top\\\"\\n                  title=\\\"Delete project\\\"\\n                  (click)=\\\"addProjectModal.showDropModal(dropProject, itemProject)\\\"\\n                >\\n                  <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                </a>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <!--START MODALS -->\\n  <app-projects-modal [dataValue]=\\\"project\\\" [title]=\\\"createProjectModalHeader\\\" #addProjectModal></app-projects-modal>\\n  <!-- END MODAL -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/project/project.component.html\n// module id = ../../../../../src/app/components/project/project.component.html\n// module chunks = main","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { ProjectService } from '../../services/project.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit, DoCheck {\n  createProjectModalHeader: string = \"Project functionality\";\n  project: Object;\n  projectLenth: number;\n  createProject: boolean = true;\n  dropProject: boolean = true;\n  chengeProject: boolean = true;\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  ngOnInit() {\n    this.projectService.getProject().subscribe(projectList => {\n      this.project = projectList;\n      this.projectLenth = projectList.length;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  ngDoCheck() {\n    if(!this.project){\n      return\n    } else if (this.projectLenth < Object.keys(this.project).length || this.projectLenth > Object.keys(this.project).length) {\n      this.projectService.getProject().subscribe(projectList => {\n        this.project = projectList;\n        this.projectLenth = projectList.length;\n      },\n      err => {\n        console.log(err);\n        return false;\n      });\n    } else {\n      return;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/project/project.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>User Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"userName\\\" name=\\\"userName\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>First Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label>Company Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>City</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Phone Number</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ngAmpx/angular-src/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: String;\n  userName: String;\n  firstName: String;\n  lastName: String;\n  companyName: String;\n  city: String;\n  phone: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService, \n    private flashMessage: FlashMessagesService, \n    private authService: AuthService, \n    private router: Router\n  ) {}\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      email: this.email,\n      userName: this.userName,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      companyName: this.companyName,\n      city: this.city,\n      phone: this.phone,\n      password: this.password\n    }\n\n    //Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    //Validate Email\n    if(!this.validateService.validateEmeil(user.email)){\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    //Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show('You are now registered and can log in!', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went wrong!!', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router){}\r\n  canActivate(){\r\n    if(this.authService.loggedIn()){\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable()\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http) { }\n\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    //for dev use\n    //'http://localhost:3000/users/register'\n    \n    //for deploy use\n    //'users/register'\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n      .map(res => res.json());\n  }\n\n  authenticateUser(user){\n    let headers = new Headers();\n    //for dev use\n    //'http://localhost:3000/users/authenticate'\n\n    //for deploy use\n    //'users/authenticate'\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n      .map(res => res.json());\n  }\n\n  getProfile(){\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    //for dev use\n    //'http://localhost:3000/users/profile'\n\n    //for deploy\n    //'users/profile'\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/profile', {headers: headers})\n      .map(res => res.json());\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class ElectricalService {\n\n  constructor(private http: Http) { }\n\n  getElectricals(id){\n    let headers = new Headers();\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('project/'+id+'/electricals', {headers: headers})\n      .map(res => res.json());\n  }\n\n  createElectrical(id, electrical){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('project/'+id+'/electrical-create/', electrical, {headers: headers})\n      .map(res => res.json());\n  }\n\n  getElectricalItem(projectId, electricalId){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('project/'+projectId+'/electricals/'+electricalId, {headers: headers})\n      .map(res => res.json());\n  }\n\n  updateElectricalItem(projectId, electricalId, electricalItem){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.patch('project/'+ projectId+'/electrical-update/'+electricalId, electricalItem, {headers: headers})\n      .map(res => res.json());\n  }\n\n  deleteElectricalItem(projectId, electricalId){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete('project/' + projectId + '/electricals/' + electricalId, {headers: headers})\n      .map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/services/electrical.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ProjectService {\n\n  constructor(private http: Http) { }\n\n  getProject(){\n    let headers = new Headers();\n    //headers.append('Content-Type', 'application/json');\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('project', {headers: headers})\n      .map(res => res.json());\n  }\n  \n  postProject(project){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('project/project-create', project, {headers: headers})\n      .map(res => res.json());\n  }\n\n  updateProject(id, project){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    return this.http.put('project/'+ id, project)\n      .map(res => res.json());\n  }\n\n  deleteProject(id){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete('project/'+ id, {headers: headers})\n      .map(res => res.json());\n  }\n  getProjectById(id){\n    //for dev use\n    //'http://localhost:3000/project'\n\n    //for deploy\n    //'project'\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('project/'+id, {headers: headers})\n      .map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/services/project.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.email == undefined || user.userName == undefined || user.firstName == undefined ||  \n      user.lastName == undefined || user.companyName == undefined || user.city == undefined ||\n      user.phone == undefined || user.password == undefined){\n        return false;\n    } else {\n      return true;\n    }\n  }\n  validateEmeil(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/app/services/validate.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/ngAmpx/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}